openapi: 3.0.0
info:
  title: NomadCrew Backend API
  version: 1.0.0
  description: API documentation for NomadCrew backend.
servers:
  - url: http://localhost:8080/v1
    description: Local development server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Trip:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        destination:
          type: string
        status:
          type: string
          enum:
            - PLANNING
            - ACTIVE
            - COMPLETED
            - CANCELLED
        createdBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - destination
        - startDate
        - endDate
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        detail:
          type: string
    Member:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        role:
          type: string
          enum:
            - ADMIN
            - MEMBER
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SearchCriteria:
      type: object
      properties:
        destination:
          type: string
        startDateFrom:
          type: string
          format: date
        startDateTo:
          type: string
          format: date
security:
  - BearerAuth: []
paths:
  /trips:
    post:
      summary: Create a trip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
      responses:
        '201':
          description: Trip created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    get:
      summary: List all trips
      responses:
        '200':
          description: List of trips
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
  /trips/search:
    post:
      summary: Search trips by criteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteria'
      responses:
        '200':
          description: List of trips matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
      security:
        - BearerAuth: []
  /trips/{id}:
    get:
      summary: Get trip details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Trip details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      summary: Update trip
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
      responses:
        '200':
          description: Trip updated successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      summary: Delete trip
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Trip deleted successfully
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /trips/{id}/status:
    patch:
      summary: Update trip status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - PLANNING
                    - ACTIVE
                    - COMPLETED
                    - CANCELLED
              required:
                - status
      responses:
        '200':
          description: Status updated successfully
        '400':
          description: Validation error
      security:
        - BearerAuth: []
  /trips/{id}/members:
    get:
      summary: List trip members
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
      security:
        - BearerAuth: []
    post:
      summary: Add a member to the trip
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum:
                    - ADMIN
                    - MEMBER
              required:
                - userId
                - role
      responses:
        '201':
          description: Member added successfully
        '400':
          description: Validation error
      security:
        - BearerAuth: []
    put:
      summary: Update a member's role
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum:
                    - ADMIN
                    - MEMBER
              required:
                - role
      responses:
        '200':
          description: Member role updated successfully
        '400':
          description: Validation error
      security:
        - BearerAuth: []
    delete:
      summary: Remove a member from the trip
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Member removed successfully
        '404':
          description: Member not found
      security:
        - BearerAuth: []
