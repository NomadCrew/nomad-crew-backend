name: Fly.io PR Preview

on:
  pull_request:
    branches: [develop, main]
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'LICENSE'
      - '**/*.{png,jpg}'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: nomadcrew_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:latest
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true
      
      - name: Install dependencies
        run: go mod download
      
      - name: Run tests
        id: run-tests
        env:
          DB_CONNECTION_STRING: postgresql://test:test@localhost:5432/nomadcrew_test
          JWT_SECRET_KEY: test_secret
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic -buildvcs=false ./...

  deploy-preview:
    name: Deploy PR Preview
    needs: test
    runs-on: ubuntu-latest
    concurrency: deploy-preview
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Check Fly.toml configuration
        run: |
          echo "Current fly.toml content:"
          cat fly.toml
      
      - name: Set App Name
        run: |
          APP_NAME="nomadcrew-preview"
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          
          # Make a backup of the original fly.toml
          cp fly.toml fly.toml.original
          
          # Modify fly.toml for the preview app
          sed -i "s/app = .*/app = '$APP_NAME'/" fly.toml
          cat fly.toml | grep "app ="
      
      - name: Deploy PR Preview
        run: |
          echo "Deploying to $APP_NAME with PR #$PR_NUMBER"
          # Set a longer timeout for deployment (10 minutes)
          flyctl deploy --remote-only --build-arg VERSION=pr-$PR_NUMBER --build-arg SERVER_ENVIRONMENT=staging --wait-timeout 600
          
          # If deployment fails, try to get logs
            if [ $? -ne 0 ]; then
              echo "Deployment failed, checking logs..."
              flyctl logs --app $APP_NAME
              
              # Check if the machine exists and its status
              echo "Checking machine status..."
              flyctl machines list --app $APP_NAME
            fi
      
      - name: Set Environment Variables
        run: |
          echo "Setting environment variables for $APP_NAME"
          flyctl secrets set \
            JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}" \
            SUPABASE_SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_KEY }}" \
            SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
            SUPABASE_JWT_SECRET="${{ secrets.SUPABASE_JWT_SECRET }}" \
            EMAIL_FROM_ADDRESS="${{ secrets.EMAIL_FROM_ADDRESS }}" \
            EMAIL_FROM_NAME="${{ secrets.EMAIL_FROM_NAME }}" \
            FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
            ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}" \
            SERVER_ENVIRONMENT="staging" \
            --app $APP_NAME
      
      - name: Check Deployment Status
        run: |
          echo "Checking deployment status for $APP_NAME"
          flyctl status --app $APP_NAME
      
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const appName = process.env.APP_NAME;
            const url = `https://${appName}.fly.dev`;
            
            try {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸš€ Preview Environment Deployed!
                
                Your changes are available for preview at:
                
                ðŸ”— [${url}](${url})
                
                This is a shared preview environment that will be updated when any PR is pushed.
                
                ### Environment Details
                - **Environment:** PR Preview
                - **App Name:** ${appName}
                - **Deployment:** Fly.io
                - **Deployed Commit:** \`${context.sha.substring(0, 7)}\`
                - **PR Number:** #${context.issue.number}
                `
              });
            } catch (error) {
              console.error('Error commenting on PR:', error);
            }