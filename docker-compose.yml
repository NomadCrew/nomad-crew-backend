services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: nomadcrew
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nomadcrew"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispass}
      REDIS_DB: ${REDIS_DB:-0}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST: ${DB_HOST:-postgres}  # Use postgres as default in Docker
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-admin123}
      DB_NAME: ${DB_NAME:-nomadcrew}
      DB_SSL_MODE: ${DB_SSL_MODE:-disable}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      PORT: ${PORT:-8080}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      PEXELS_API_KEY: ${PEXELS_API_KEY}
      REDIS_ADDRESS: "redis:6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispass}
      REDIS_DB: ${REDIS_DB:-0}
      AWS_REGION: ${AWS_REGION:-us-east-1}  # Default for local development
      SERVER_ENVIRONMENT: "development"
      ALLOWED_ORIGINS: "*"
      AWS_SECRETS_PATH: ${AWS_SECRETS_PATH:-nomadcrew/prod/secrets}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data: